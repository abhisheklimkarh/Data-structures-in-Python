# Single Linked Lists


class Node:
    ''' Class to create new nodes and assigning it's pointer. '''
    def __init__(self,data):
        self.data = data
        self.next = None


class LinkedList:
    ''' Class to create a linked list and do various operations. '''
    def __init__(self):
        self.head = None

    def print_list(self):
        '''Display List'''
        value = self.head
        while value:
            print(value.data)
            value = value.next

    def add_to_start(self,data):
        '''Add to start of Linked List'''
        n_node = Node(data)
        n_node.next = self.head
        self.head = n_node

    def add_at_end(self, data):
        '''Add at the end of Linked List'''
        n_node = Node(data)
        value = self.head
        while value.next:
            value = value.next
        value.next = n_node

    def delete_node(self, data):
        '''Delete the specific node in the list'''
        node = self.head
        
        while node is not None:
            if node.data == data:
                break
            prev = node
            node = node.next

        if node == None:
            print("No node present!")

        prev.next = node.next

        node = None


if __name__ == '__main__':
    linked_list = LinkedList()
    linked_list.head = Node("1")
    second = Node("2")
    third = Node("3")
    fourth = Node("4")
    fifth = Node("5")

    linked_list.head.next = second
    second.next = third
    third.next = fourth
    fourth.next = fifth

    linked_list.print_list()

    print("#"*30)

    linked_list.add_at_end("6")

    linked_list.print_list()

    print("#" * 30)

    linked_list.add_to_start("7")

    linked_list.print_list()

    print("#" * 30)

    linked_list.delete_node("8")

    linked_list.print_list()


